name: Release
on:
  push:
    branches:
      - main
      - next
      - beta
      - "*.x"

permissions:
  contents: read # for checkout

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    steps:
      - name: Generate a token
        id: id-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.TOKEN_APP_ID }}
          private-key: ${{ secrets.TOKEN_APP_PRIVATE_KEY }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.id-token.outputs.token }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          registry-url: "https://registry.npmjs.org"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
        env:
          STORE_PATH: ${{ env.STORE_PATH }}

      - name: Install dependencies
        run: pnpm i
      - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
        run: pnpm audit signatures
      - name: Release
        env:
          GITHUB_TOKEN: ${{ steps.id-token.outputs.token }}
          NPM_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
        run: npx semantic-release
